#! /usr/bin/bash
# lkr lock directory
set -eo pipefail

PUBLIC_KEY=~/.config/nixpkgs/homedir/.ssh/banana.pub
PRIVATE_KEY_ENCRYPTED=~/.config/nixpkgs/homedir/.ssh/banana.age
RBW_PRIVATE_KEY_ENTRY="banana"
LOCKED_EXTENSION="lkr"
UNLOCKED_EXTENSION="priv"

fail () {
    printf "%s\n" "$1" >&2
    exit "${2-1}"
}

check_internet () {
    wget -q --spider https://google.com
    error_code=$?
    if [ $error_code -eq 4 ]; 
    then
        return 1
    else
        return 0    
    fi
}

get_private_key () {
    if check_internet;
    then
        rbw get $RBW_PRIVATE_KEY_ENTRY
    else
        echo "Could not connect to internet" >&2
        echo "Using local key" >&2
        age -d $PRIVATE_KEY_ENCRYPTED
    fi
}

lock () {
    # [ -d "$1" ] || fail "Error: $1 is not a directory"
    fullpath=$(realpath "$1")
    filedir=$(dirname "$fullpath")
    filename=$(basename -- "$fullpath")
    extension="${filename##*.}"
    [ "$extension" == "$UNLOCKED_EXTENSION" ] || fail "File/Directory must have .${UNLOCKED_EXTENSION} suffix"
    filename="${filename%.*}"
    tar cP "$fullpath" | age -R $PUBLIC_KEY -e >> "${filedir}/${filename}.${LOCKED_EXTENSION}"
    rm -rf "$1"
}

unlock () {
    fullpath=$(realpath "$1")
    filename=$(basename -- "$1")
    extension="${filename##*.}"
    filename="${filename%.*}"
    [ "$extension" == $LOCKED_EXTENSION ] || fail "Please pass in .${LOCKED_EXTENSION} extension file"

    age -d -i <(get_private_key) "$fullpath" | tar xP
    rm -f "$1"
}

main () {
    POSITIONAL_ARGS=()

    while [[ $# -gt 0 ]]; do
      case $1 in
        -*|--*)
          echo "Unknown option $1"
          exit 1
          ;;
        *)
          POSITIONAL_ARGS+=("$1") # save positional arg
          shift # past argument
          ;;
      esac
    done

    set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

    case "$1" in
        lock-all)
            unlocked_files=(`echo $(fd -e "$UNLOCKED_EXTENSION" . "$HOME")`)
            for f in "${unlocked_files[@]}"; do
                lock $f
            done
            exit 0
    esac

    [ $# -eq 2 ] || fail "Usage: lkr [lock/unlock] [ARG]"
    case "$1" in
        l|lock)
            [[ -e "$2" ]] || fail "$2 does not exist"
            lock "$2"
            ;;
        u|unlock)
            [[ -e "$2" ]] || fail "$2 does not exist"
            unlock "$2"
            ;;
        *)
            fail "Usage: lkr [lock/unlock] [ARG]"
            ;;
    esac
}

main "$@"
